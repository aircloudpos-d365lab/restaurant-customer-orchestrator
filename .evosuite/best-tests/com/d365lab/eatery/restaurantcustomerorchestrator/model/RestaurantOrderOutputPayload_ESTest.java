/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 09 09:04:55 GMT 2020
 */

package com.d365lab.eatery.restaurantcustomerorchestrator.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.d365lab.eatery.restaurantcustomerorchestrator.dao.RestaurantOrder;
import com.d365lab.eatery.restaurantcustomerorchestrator.model.Item;
import com.d365lab.eatery.restaurantcustomerorchestrator.model.RestaurantOrderOutputPayload;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RestaurantOrderOutputPayload_ESTest extends RestaurantOrderOutputPayload_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RestaurantOrderOutputPayload restaurantOrderOutputPayload0 = new RestaurantOrderOutputPayload();
      Stack<Item> stack0 = new Stack<Item>();
      restaurantOrderOutputPayload0.setOrderMenuList(stack0);
      List<Item> list0 = restaurantOrderOutputPayload0.getOrderMenuList();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RestaurantOrderOutputPayload restaurantOrderOutputPayload0 = new RestaurantOrderOutputPayload();
      Vector<Item> vector0 = new Vector<Item>();
      Integer integer0 = new Integer(0);
      Double double0 = new Double(0.0);
      Item item0 = new Item(integer0, integer0, integer0, "L(", "L(", "L(", "L(", "", "sw-9dO}y0[7F0T:.H", "org.springframework.data.domain.Chunk", double0, double0, double0, double0, double0, integer0, (Integer) null);
      vector0.add(item0);
      restaurantOrderOutputPayload0.setOrderMenuList(vector0);
      List<Item> list0 = restaurantOrderOutputPayload0.getOrderMenuList();
      assertTrue(list0.contains(item0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RestaurantOrderOutputPayload restaurantOrderOutputPayload0 = new RestaurantOrderOutputPayload();
      List<Item> list0 = restaurantOrderOutputPayload0.getOrderMenuList();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RestaurantOrderOutputPayload restaurantOrderOutputPayload0 = new RestaurantOrderOutputPayload();
      RestaurantOrder restaurantOrder0 = restaurantOrderOutputPayload0.getRestaurantOrder();
      assertNull(restaurantOrder0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RestaurantOrder restaurantOrder0 = new RestaurantOrder();
      RestaurantOrderOutputPayload restaurantOrderOutputPayload0 = new RestaurantOrderOutputPayload(restaurantOrder0, (List<Item>) null);
      RestaurantOrder restaurantOrder1 = restaurantOrderOutputPayload0.getRestaurantOrder();
      assertNull(restaurantOrder1.getOrderTotalCgstPercentage());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RestaurantOrderOutputPayload restaurantOrderOutputPayload0 = new RestaurantOrderOutputPayload();
      restaurantOrderOutputPayload0.setRestaurantOrder((RestaurantOrder) null);
  }
}
