/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 09 09:05:41 GMT 2020
 */

package com.d365lab.eatery.restaurantcustomerorchestrator.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.d365lab.eatery.restaurantcustomerorchestrator.model.UploadFileResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UploadFileResponse_ESTest extends UploadFileResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("com.d365lab.eatery.restaurantcustomerorchestrator.model.UploadFileResponse", "com.d365lab.eatery.restaurantcustomerorchestrator.model.UploadFileResponse", "", 0L);
      uploadFileResponse0.getSize();
      assertEquals("com.d365lab.eatery.restaurantcustomerorchestrator.model.UploadFileResponse", uploadFileResponse0.getFileName());
      assertEquals("com.d365lab.eatery.restaurantcustomerorchestrator.model.UploadFileResponse", uploadFileResponse0.getFileDownloadUri());
      assertEquals("", uploadFileResponse0.getFileType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("938]e:|,RM{", "", "", 443L);
      long long0 = uploadFileResponse0.getSize();
      assertEquals("", uploadFileResponse0.getFileType());
      assertEquals("", uploadFileResponse0.getFileDownloadUri());
      assertEquals("938]e:|,RM{", uploadFileResponse0.getFileName());
      assertEquals(443L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("Coo", "Coo", "Coo", 0L);
      uploadFileResponse0.setFileType((String) null);
      String string0 = uploadFileResponse0.getFileType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("", "", "", (-275L));
      uploadFileResponse0.getFileType();
      assertEquals((-275L), uploadFileResponse0.getSize());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("/w )yr ybB", "/w )yr ybB", "", (-1L));
      assertEquals("/w )yr ybB", uploadFileResponse0.getFileName());
      
      uploadFileResponse0.setFileName((String) null);
      uploadFileResponse0.getFileName();
      assertEquals((-1L), uploadFileResponse0.getSize());
      assertEquals("", uploadFileResponse0.getFileType());
      assertEquals("/w )yr ybB", uploadFileResponse0.getFileDownloadUri());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("", "", "", 1655L);
      uploadFileResponse0.getFileName();
      assertEquals(1655L, uploadFileResponse0.getSize());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("iK", (String) null, "iK", 0L);
      String string0 = uploadFileResponse0.getFileDownloadUri();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("/w )yr ybB", "/w )yr ybB", "", (-1L));
      uploadFileResponse0.setSize((-3010L));
      assertEquals((-3010L), uploadFileResponse0.getSize());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("/w )yr ybB", "/w )yr ybB", "", (-1L));
      assertEquals("/w )yr ybB", uploadFileResponse0.getFileDownloadUri());
      
      uploadFileResponse0.setFileDownloadUri("");
      uploadFileResponse0.getFileDownloadUri();
      assertEquals("", uploadFileResponse0.getFileType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("/w )yr ybB", "/w )yr ybB", "", (-1L));
      String string0 = uploadFileResponse0.getFileName();
      assertEquals("/w )yr ybB", uploadFileResponse0.getFileDownloadUri());
      assertEquals("/w )yr ybB", string0);
      assertEquals("", uploadFileResponse0.getFileType());
      assertEquals((-1L), uploadFileResponse0.getSize());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("/w )yr ybB", "/w )yr ybB", "", (-1L));
      String string0 = uploadFileResponse0.getFileDownloadUri();
      assertEquals((-1L), uploadFileResponse0.getSize());
      assertEquals("", uploadFileResponse0.getFileType());
      assertEquals("/w )yr ybB", uploadFileResponse0.getFileName());
      assertEquals("/w )yr ybB", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("/w )yr ybB", "/w )yr ybB", "", (-1L));
      long long0 = uploadFileResponse0.getSize();
      assertEquals((-1L), long0);
      assertEquals("", uploadFileResponse0.getFileType());
      assertEquals("/w )yr ybB", uploadFileResponse0.getFileName());
      assertEquals("/w )yr ybB", uploadFileResponse0.getFileDownloadUri());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UploadFileResponse uploadFileResponse0 = new UploadFileResponse("Coo", "Coo", "Coo", 0L);
      String string0 = uploadFileResponse0.getFileType();
      assertEquals("Coo", string0);
  }
}
