/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 09 09:06:40 GMT 2020
 */

package com.d365lab.eatery.restaurantcustomerorchestrator.services.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.d365lab.eatery.restaurantcustomerorchestrator.dao.RestaurantMenuCategory;
import com.d365lab.eatery.restaurantcustomerorchestrator.repositories.RestaurantMenuCategoryRepository;
import com.d365lab.eatery.restaurantcustomerorchestrator.services.impl.RestaurantMenuCategoryServiceImpl;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.javaee.injection.Injector;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RestaurantMenuCategoryServiceImpl_ESTest extends RestaurantMenuCategoryServiceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RestaurantMenuCategoryServiceImpl restaurantMenuCategoryServiceImpl0 = new RestaurantMenuCategoryServiceImpl();
      RestaurantMenuCategoryRepository restaurantMenuCategoryRepository0 = mock(RestaurantMenuCategoryRepository.class, new ViolatedAssumptionAnswer());
      doReturn((List<Object>) null).when(restaurantMenuCategoryRepository0).findRestaurantMenuCategories();
      Injector.inject(restaurantMenuCategoryServiceImpl0, (Class<?>) RestaurantMenuCategoryServiceImpl.class, "restaurantMenuCategoryRepository", (Object) restaurantMenuCategoryRepository0);
      Injector.validateBean(restaurantMenuCategoryServiceImpl0, (Class<?>) RestaurantMenuCategoryServiceImpl.class);
      List<RestaurantMenuCategory> list0 = restaurantMenuCategoryServiceImpl0.getAllMenuCategoryList();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RestaurantMenuCategoryServiceImpl restaurantMenuCategoryServiceImpl0 = new RestaurantMenuCategoryServiceImpl();
      RestaurantMenuCategoryRepository restaurantMenuCategoryRepository0 = mock(RestaurantMenuCategoryRepository.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(restaurantMenuCategoryRepository0).findRestaurantMenuCategories();
      Injector.inject(restaurantMenuCategoryServiceImpl0, (Class<?>) RestaurantMenuCategoryServiceImpl.class, "restaurantMenuCategoryRepository", (Object) restaurantMenuCategoryRepository0);
      Injector.validateBean(restaurantMenuCategoryServiceImpl0, (Class<?>) RestaurantMenuCategoryServiceImpl.class);
      List<RestaurantMenuCategory> list0 = restaurantMenuCategoryServiceImpl0.getAllMenuCategoryList();
      assertNull(list0);
  }
}
