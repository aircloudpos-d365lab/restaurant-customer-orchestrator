/*
 * This file was automatically generated by EvoSuite
 * Mon Mar 09 09:07:42 GMT 2020
 */

package com.d365lab.eatery.restaurantcustomerorchestrator;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.d365lab.eatery.restaurantcustomerorchestrator.RestaurantCustomerOrchestratorApplication;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RestaurantCustomerOrchestratorApplication_ESTest extends RestaurantCustomerOrchestratorApplication_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "com.d365lab.eatery.restaurantcustomerorchestrator.RestaurantCustomerOrchestratorApplication";
      stringArray0[1] = "exrH.nGq";
      stringArray0[2] = "lWARV";
      stringArray0[3] = "xz;03QK-_@G]y0O";
      stringArray0[4] = "org.springframework.data.repository.config.DefaultRepositoryBaseClass";
      stringArray0[5] = "CREATE_IF_NOT_FOUND";
      // Undeclared exception!
      try { 
        RestaurantCustomerOrchestratorApplication.main(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Failed to process import candidates for configuration class [com.d365lab.eatery.restaurantcustomerorchestrator.RestaurantCustomerOrchestratorApplication]; nested exception is org.evosuite.runtime.TooManyResourcesException: Loop has been executed more times than the allowed 10000
         //
         verifyException("org.springframework.context.annotation.ConfigurationClassParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        RestaurantCustomerOrchestratorApplication.main((String[]) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Args must not be null
         //
         verifyException("org.springframework.util.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RestaurantCustomerOrchestratorApplication restaurantCustomerOrchestratorApplication0 = new RestaurantCustomerOrchestratorApplication();
  }
}
